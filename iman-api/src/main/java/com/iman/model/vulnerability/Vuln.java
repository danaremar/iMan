package com.iman.model.vulnerability;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.PastOrPresent;

import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.iman.model.actives.Active;
import com.iman.model.users.User;

import lombok.Data;

@Entity
@Data
@Table(name = "vuln", indexes = { @Index(columnList = "code"), @Index(columnList = "name") })
public class Vuln {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	@NotNull
	@Min(value = 0)
	private Long code;

	@NotBlank
	@Length(max = 50)
	private String name;

	@Length(max = 255)
	private String description;

	@NotNull
	private Boolean active;

	@NotNull
	@PastOrPresent
	private Date creationDate;

	@Length(max = 50)
	private String affectedVersion;

	@Length(max = 50)
	private String newVersion;
	
	@NotBlank
	private Boolean affects;
	
	@NotBlank
	private Boolean notified;
	
	@NotBlank
	private Boolean fixed;
	
	@NotBlank
	@Length(max = 50)
	private String patchType;
	
	@PastOrPresent
	private Date patchDate;
	
	@NotNull
	@ManyToOne
	@JoinColumn(name = "created_by_user_id")
	@JsonIgnore
	private User createdBy;
	
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name="active_id")
	@JsonIgnore
	private Active relActive;
	
	@ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinTable(name = "vulnlib")
	private List<VulnLib> vulnlib;
	
	
}
